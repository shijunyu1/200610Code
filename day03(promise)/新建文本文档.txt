        (ES5) this到底指向于谁?  看函数调用位置的调用形式
                普通调用 this--> window: fn()
                隐式调用 this--> obj: obj.fn()
                显示调用 this--> obj: fn.call(obj)  fn.apply(obj)
                构造调用 this--> 构造出来的实例对象 : new fn()

    变量的查找基于作用域链;如果整条作用域链上都没有对应变量的声明 则会报错(右查询)
    变量的查找基于作用域链;如果整条作用域链上都没有对应变量的声明 则在全局自动声明一份(左查询)
    属性的查找基于原型链  ;如果整条原型链上都没有对应的属性 则返回undefined


变量的查找 : 左右查询
    左查询: 对等号左边的变量发起查询
    右查询: 对等号非左边的变量发起查询
  